@model AudioVolume.ViewModel.InsertProductViewModel
@{
    ViewBag.Title = "Thêm mới sản phẩm";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    .w-1 {
        width: 60px;
    }

    .option {
        display: flex;
        gap: 10px
    }

    .info {
        display: flex;
        gap: 10px
    }
</style>
<div class="page-header">
    <div class="page-title">
        <i class="fa-solid fa-align-right fa-rotate-180 fa-sm"></i>
        <span>Thêm mới sản phẩm</span>
    </div>
    <a href="#" onclick="history.go(-1)" class="btn-main btn-labeled bg-brown">
        <span class="icon">
            <i class="fa-solid fa-left"></i>
        </span>
        Quay lại
    </a>
</div>
<div class="content">
    <div class="accordion">
        <div class="accordion-item border-left-slate">
            <div class="accordion-header">
                <div class="card-title">
                    <i class="fa-light fa-octagon-plus fa-lg"></i>
                    Thêm mới sản phẩm
                </div>
                <button type="button" data-bs-toggle="collapse" data-bs-target="#createForm" aria-expanded="true">
                    <i class="fa-solid fa-angle-down"></i>
                </button>
            </div>
            <div id="createForm" class="accordion-collapse collapse show">
                <div class="accordion-body">
                    @using (Html.BeginForm("Product", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.ValidationSummary(true)

                        <div class="mb-3 row">
                            <label class="col-form-label col-lg-3">Danh mục <span class="text-danger">*</span></label>
                            <div class="col-lg-9">
                                <select name="CategoryId" class="form_control" data-val="true" data-val-required="Hãy chọn Danh mục sản phẩm">
                                    <option value="">Danh mục sản phẩm</option>
                                    @foreach (var category in Model.Categories.Where(a => a.ParentId == null))
                                    {
                                        <option value="@category.Id">@category.CategoryName</option>
                                        foreach (var child in Model.Categories.Where(a => a.ParentId == category.Id))
                                        {
                                            <option value="@child.Id"> -- @child.CategoryName</option>
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(a => a.CategoryId)
                            </div>
                        </div>
                        <div class="mb-3 row">
                            <label class="col-form-label col-lg-3">Thương hiệu <span class="text-danger">*</span></label>
                            <div class="col-lg-9">
                                <select name="BrandId" class="form_control" data-val="true" data-val-required="Hãy chọn thương hiệu">
                                    <option value="">Danh sách thương hiệu</option>
                                    @foreach (var category in Model.Brands)
                                    {
                                        <option value="@category.Id">
                                            @category.Name
                                        </option>
                                    }
                                </select>
                                @Html.ValidationMessageFor(a => a.CategoryId)
                            </div>
                        </div>
                        <div class="mb-3 row">
                            <label class="col-form-label col-lg-3" for="Product_Name">Tên sản phẩm <span class="text-danger">*</span></label>
                            <div class="col-9">
                                @Html.EditorFor(a => a.Product.Name)
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(model => model.Price, new { @class = "col-form-label col-lg-3" })
                            <div class="col-9">
                                @Html.TextBoxFor(a => a.Price, new { @class = "form_control w100 input-number" })
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(model => model.PriceSale, new { @class = "col-form-label col-lg-3" })
                            <div class="col-9">
                                @Html.TextBoxFor(a => a.PriceSale, new { @class = "form_control w100 input-number" })
                            </div>
                        </div>
                        <div class="mb-3 row">
                            <label class="col-form-label col-lg-3">Thêm các Option</label>
                            <div class="col-9">
                                <div id="option-container">
                                    @for (int i = 0; i < Model.Options.Count; i++)
                                    {
                                        <div class="option mb-3">
                                            <input type="text" name="Options[@i].Name" value="@Model.Options[i].Name" placeholder="Tên Option" class="form-control w-25" />
                                            <input type="number" name="Options[@i].Price" value="@Model.Options[i].Price" placeholder="Giá" class="form-control input-number w-25" />
                                            <button type="button" class="btn btn-danger remove-option">Xóa</button>
                                        </div>
                                    }
                                </div>
                                <button type="button" id="add-option" class="btn btn-primary">Thêm Option</button>
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.Image, new { @class = "col-form-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.TextBoxFor(a => a.Product.Image, new { type = "file" })
                                <div class="text-danger mt-2">Chấp nhận ảnh jpg, png, gif, jpeg < 4MB</div>
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.CoverImage, new { @class = "col-form-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.TextBoxFor(a => a.Product.CoverImage, new { type = "file" })
                                <div class="text-danger mt-2">Chấp nhận ảnh jpg, png, gif, jpeg < 4MB</div>
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.Feedback, new { @class = "col-form-label col-lg-3" })
                            <div class="col-9">
                                <div class="alert alert-info">
                                    <p class="btn btn-success fileinput-button">
                                        <i class="glyphicon glyphicon-plus"></i>
                                        <span>Chọn ảnh...</span>
                                        <input type="file" id="fileupload" name="files[]" accept="image/*" multiple="" />
                                    </p><br />
                                    - Chọn ảnh để upload: (gif, png, jpg, jpeg < 4MB)<br />
                                    - Kích thước: 800x 800px<br />
                                    - Ảnh đầu tiên sẽ là ảnh đại diện<br />
                                </div>
                                <div id="progress" class="progress">
                                    <div class="progress-bar progress-bar-success"></div>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3 row">
                            <div class="col-form-label col-lg-3"></div>
                            <div class="col-9">
                                <ul id="ListImages"></ul>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-form-label col-lg-3"></div>
                            <div class="col-9">
                                <div class="col-3">
                                    @Html.LabelFor(a => a.Product.GiaSoc, new { @class = "col-form-label w-1" })
                                    <label class="form-check-label">
                                        <input type="checkbox" name="Product.GiaSoc" value="true" />
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <div class="col-3">
                                    @Html.LabelFor(a => a.Product.QuaTo, new { @class = "col-form-label w-1" })
                                    <label class="form-check-label">
                                        <input type="checkbox" name="Product.QuaTo" value="true" />
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <div class="col-3">
                                    @Html.LabelFor(a => a.Product.BanChay, new { @class = "col-form-label w-1" })
                                    <label class="form-check-label">
                                        <input type="checkbox" name="Product.BanChay" value="true" />
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <div class="col-3">
                                    @Html.LabelFor(a => a.Product.New, new { @class = "col-form-label w-1" })
                                    <label class="form-check-label">
                                        <input type="checkbox" name="Product.New" value="true" />
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <div class="col-3">
                                    @Html.LabelFor(a => a.Product.TroGia, new { @class = "col-form-label w-1" })
                                    <label class="form-check-label">
                                        <input type="checkbox" name="Product.TroGia" value="true" />
                                        <span class="checkmark"></span>
                                    </label>
                                </div>

                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.Body, new { @class = "col-form-label col-lg-3" })
                            <div class="col-9">
                                @Html.EditorFor(a => a.Product.Body)
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.KichThuoc, new { @class = "col-form-label col-lg-3" })
                            <div class="col-9">
                                @Html.EditorFor(a => a.Product.KichThuoc)
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.Donvi, new { @class = "col-form-label col-lg-3" })
                            <div class="col-9">
                                @Html.EditorFor(a => a.Product.Donvi)
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.BaoHanh, new { @class = "col-form-label col-lg-3" })
                            <div class="col-9">
                                @Html.EditorFor(a => a.Product.BaoHanh)
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.Nguongoc, new { @class = "col-form-label col-lg-3" })
                            <div class="col-9">
                                @Html.EditorFor(a => a.Product.Nguongoc)
                            </div>
                        </div>
                        <div class="mb-3 row">
                            <label class="col-form-label col-lg-3">Thêm thông tin</label>
                            <div class="col-9">
                                <div id="info-container">
                                    @for (int i = 0; i < Model.ProductInfos.Count; i++)
                                    {
                                        <div class="info mb-3">
                                            <input type="text" name="ProductInfos[@i].Name" value="@Model.ProductInfos[i].Name" placeholder="Tên" class="form-control w-25" />
                                            <textarea name="ProductInfos[@i].Body"  placeholder="Nội dung" class="form-control w-25">@Model.ProductInfos[i].Body</textarea>
                                            <button type="button" class="btn btn-danger remove-option">Xóa</button>
                                        </div>
                                    }
                                </div>
                                <button type="button" id="add-info" class="btn btn-primary">Thêm</button>
                            </div>
                        </div>

                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.Url, new { @class = "col-form-label col-lg-3" })
                            <div class="col-9">
                                @Html.EditorFor(a => a.Product.Url)
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.Home, new { @class = "col-form-label col-lg-3" })
                            <div class="col-9">
                                <label class="form-check-label">
                                    <input type="checkbox" name="Product.Home" />
                                    <span class="checkmark"></span>
                                </label>
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.Active, new { @class = "col-form-label col-lg-3" })
                            <div class="col-9">
                                <label class="form-check-label">
                                    <input type="checkbox" name="Product.Active" value="true" checked />
                                    <span class="checkmark"></span>
                                </label>
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.Top, new { @class = "col-form-label col-lg-3" })
                            <div class="col-9">
                                <label class="form-check-label">
                                    <input type="checkbox" name="Product.Top" value="true" checked />
                                    <span class="checkmark"></span>
                                </label>
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.Sort, new { @class = "col-form-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.EditorFor(a => a.Product.Sort)
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.TitleMeta, new { @class = "col-form-label col-lg-3" })
                            <div class="col-9">
                                @Html.EditorFor(a => a.Product.TitleMeta)
                            </div>
                        </div>
                        <div class="mb-3 row">
                            @Html.LabelFor(a => a.Product.DescriptionMeta, new { @class = "col-form-label col-lg-3" })
                            <div class="col-9">
                                @Html.EditorFor(a => a.Product.DescriptionMeta)
                            </div>
                        </div>

                        <div class="btn-group">
                            <button type="reset" onclick="resetAnyFormById('data-insert-form');" class="btn-main btn-white" id="reset">
                                <span>Đặt lại</span>
                                <i class="fa-solid fa-rotate-right ms-2"></i>
                            </button>
                            <button type="submit" class="btn-main btn-primary text-white ms-3">
                                <span>Lưu</span>
                                <i class="fa-solid fa-floppy-disk ms-2"></i>
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script src="~/Scripts/jquery.maskMoney.min.js"></script>
    <script>
            var optionIndex = @Model.Options.Count;
            $("#add-option").click(function () {
                var optionHtml = `
                    <div class="option mb-3">
                        <input type="text" name="Options[${optionIndex}].Name" placeholder="Tên Option" class="form-control w-25" />
                        <input type="number" name="Options[${optionIndex}].Price" placeholder="Giá" class="form-control input-number w-25" />
                        <button type="button" class="btn btn-danger remove-option">Xóa</button>
                    </div>`;
                $("#option-container").append(optionHtml);
                optionIndex++;
            });

            $(document).on("click", ".remove-option", function () {
                $(this).closest(".option").remove();
            });


        //
            var infIndex = @Model.ProductInfos.Count;
            $("#add-info").click(function () {
                var infoHtml = `
                    <div class="info mb-3">
                        <input type="text" name="ProductInfos[${infIndex}].Name" placeholder="Tên " class="form-control w-25" />
                        <textarea name="ProductInfos[${infIndex}].Body" placeholder="Nội dung" class="form-control w-25"></textarea>
                        <button type="button" class="btn btn-danger remove-info">Xóa</button>
                    </div>`;
                $("#info-container").append(infoHtml);
                infIndex++;
            });

            $(document).on("click", ".remove-info", function () {
                $(this).closest(".info").remove();
            });


        $(function () {
            $("#ListImages").sortable();
            $("#ListImages").disableSelection();
            $(".input-number").maskMoney({
                precision: 0,
                thousands: ','
            });
        });
        var i = 1;
        $("#fileupload").fileupload({
            add: function (e, data) {
                var uploadErrors = [];
                var acceptFileTypes = /^image\/(gif|jpe?g|png)$/i;
                if (data.originalFiles[0]["type"].length && !acceptFileTypes.test(data.originalFiles[0]["type"])) {
                    uploadErrors.push("Chỉ chấp nhận định dạng jpeg, jpg, png, gif");
                }
                if (data.originalFiles[0]["size"] > 4000000) {
                    uploadErrors.push("Dung lượng ảnh lớn hơn 4MB");
                }
                var totalImg = $("#ListImages .thumb-img-box").length;
                if (totalImg >= 10) {
                    uploadErrors.push("Chỉ đăng tối đa 10 ảnh");
                }
                if (uploadErrors.length > 0) {
                    alert(uploadErrors.join("\n"));
                    return false;
                } else {
                    data.submit();
                }
                return true;
            },
            url: "/Uploader/Upload?folder=feedbacks&r=" + Math.random(),
            dataType: "json",
            done: function (e, data) {
                $.each(data.result.files, function (index, file) {
                    $('#ListImages').append('<li class="thumb-img-box"><input type="hidden" name="Pictures" value ="' + file.name + '" /><img src="/images/feedbacks/' + file.name + '?w=80&h=80"/><a href="javascript:;" id="' + i + '" onclick="delfile(' + i + ')"><img src="/Content/images/admin/icon-delete.png" alt="" style="vertical-align:middle" /></a></li>');
                });
                i = i + 1;
                $("#progress").fadeOut(2000);
            },
            start: function () {
                $("#progress .progress-bar").css("width", "0");
                $("#progress").show();
            },
            progressall: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $("#progress .progress-bar").css("width", progress + "%");
            }
        }).prop('disabled', !$.support.fileInput).parent().addClass($.support.fileInput ? undefined : 'disabled');

        function delfile(divid) {
            if (confirm('Bạn có chắc xóa ảnh này?')) {
                $('#' + divid).parent().fadeOut().remove();
            }
        }

        function loadChildCategory(id) {
            $.getJSON("/Product/GetChildCategory", { parentId: id }, function (data) {
                var items = [];
                items.push("<option value>Hãy chọn danh mục</option>");
                $.each(data, function (key, val) {
                    items.push("<option value='" + val.Id + "'>" + val.CategoryName + "</option>");
                });
                $("#ChildCategoryId").html(items.join(""));
            });
        }
    </script>
}
